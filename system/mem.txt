a system's firmware ROM is mapped to begin at 0x0001_0000_0000_0000.

physical RAM sticks can be present at:
    0x0000_0000_0000_0000
    0x0000_1000_0000_0000
    0x0000_2000_0000_0000
    0x0000_3000_0000_0000
        ...
    0x0000_F000_0000_0000

    physical RAM must stop at 0x0000_FFFF_FFFF_FFFF.

physical addresses >= 0xFFFF_0000_0000_0000 are reserved for MMIO and are not cached by the CPU.
    each device is assigned a 16-bit id N.
    accesses to physical addresses between 0xFFFF_NNNN_0000_0000 to 0xFFFF_NNNN_FFFF_FFFF
    will be passed through directly to the device. reads/writes to these addresses must not
    trigger access violations. if addresses are not used, they must have no observable function 
    on write and return zero on read.

    each active device slot must have specific data present at the beginning (offset 0)
    of its address space that identifies the device and how it wishes to communicate.

    def DevInfo = struct {
        device_id: u64,         // unique, non-zero ID for a make/model of a device
        protocol_id: u64,       // how should this device be communicated with?
                                // this is so that devices that speak a common protocol 
                                // can immediately be recognized and communicated with
        vendor_string: [16]u8,  // 16-character, optionally-null-terminated string
                                // example: "Orbit Systems\0\0\0"
        device_string: [32]u8,  // 32-character, optionally-null-terminated string
        reserved: [960]u8,      // not used right now
    };
    sizeof DevInfo == 1024 == 0x400

    each core has a corresponding Local Core Device Controller (LCDC).
    LCDCs provides information about, and mediates interaction between, a processor core and IO devices.